# HG changeset patch
# Parent 62f0a94c26ca37164a4dcd61a79b7624569bcb56

diff --git a/dom/base/Makefile.in b/dom/base/Makefile.in
--- a/dom/base/Makefile.in
+++ b/dom/base/Makefile.in
@@ -141,16 +141,17 @@ CPPSRCS =			\
 	nsScriptNameSpaceManager.cpp \
 	nsDOMScriptObjectFactory.cpp \
 	nsQueryContentEventResult.cpp \
 	nsContentPermissionHelper.cpp \
 	nsStructuredCloneContainer.cpp \
 	nsDOMNavigationTiming.cpp \
 	nsPerformance.cpp	\
 	nsWindowMemoryReporter.cpp \
+  nsUserMedia.cpp \
 	DOMError.cpp \
 	DOMRequest.cpp \
 	Navigator.cpp \
 	$(NULL)
 
 include $(topsrcdir)/dom/dom-config.mk
 
 ifdef MOZ_JSDEBUGGER
diff --git a/dom/base/Navigator.cpp b/dom/base/Navigator.cpp
--- a/dom/base/Navigator.cpp
+++ b/dom/base/Navigator.cpp
@@ -128,16 +128,17 @@ Navigator::~Navigator()
   Invalidate();
 }
 
 NS_INTERFACE_MAP_BEGIN(Navigator)
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMNavigator)
   NS_INTERFACE_MAP_ENTRY(nsIDOMNavigator)
   NS_INTERFACE_MAP_ENTRY(nsIDOMClientInformation)
   NS_INTERFACE_MAP_ENTRY(nsIDOMNavigatorGeolocation)
+  NS_INTERFACE_MAP_ENTRY(nsIDOMNavigatorUserMedia)
   NS_INTERFACE_MAP_ENTRY(nsIDOMMozNavigatorBattery)
   NS_INTERFACE_MAP_ENTRY(nsIDOMNavigatorDesktopNotification)
   NS_INTERFACE_MAP_ENTRY(nsIDOMMozNavigatorSms)
 #ifdef MOZ_B2G_RIL
   NS_INTERFACE_MAP_ENTRY(nsIDOMNavigatorTelephony)
 #endif
   NS_INTERFACE_MAP_ENTRY(nsIDOMMozNavigatorNetwork)
 #ifdef MOZ_B2G_BT
diff --git a/dom/base/Navigator.h b/dom/base/Navigator.h
--- a/dom/base/Navigator.h
+++ b/dom/base/Navigator.h
@@ -40,16 +40,17 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
 #ifndef mozilla_dom_Navigator_h
 #define mozilla_dom_Navigator_h
 
 #include "nsIDOMNavigator.h"
 #include "nsIDOMNavigatorGeolocation.h"
+#include "nsIDOMNavigatorUserMedia.h"
 #include "nsIDOMNavigatorDesktopNotification.h"
 #include "nsIDOMClientInformation.h"
 #include "nsIDOMNavigatorBattery.h"
 #include "nsIDOMNavigatorSms.h"
 #include "nsIDOMNavigatorNetwork.h"
 #include "nsAutoPtr.h"
 #include "nsWeakReference.h"
 
@@ -95,16 +96,17 @@ class PowerManager;
 } // namespace power
 
 class Navigator : public nsIDOMNavigator
                 , public nsIDOMClientInformation
                 , public nsIDOMNavigatorGeolocation
                 , public nsIDOMNavigatorDesktopNotification
                 , public nsIDOMMozNavigatorBattery
                 , public nsIDOMMozNavigatorSms
+                , public nsIDOMNavigatorUserMedia
 #ifdef MOZ_B2G_RIL
                 , public nsIDOMNavigatorTelephony
 #endif
                 , public nsIDOMMozNavigatorNetwork
 #ifdef MOZ_B2G_BT
                 , public nsIDOMNavigatorBluetooth
 #endif
 {
@@ -114,16 +116,17 @@ public:
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSIDOMNAVIGATOR
   NS_DECL_NSIDOMCLIENTINFORMATION
   NS_DECL_NSIDOMNAVIGATORGEOLOCATION
   NS_DECL_NSIDOMNAVIGATORDESKTOPNOTIFICATION
   NS_DECL_NSIDOMMOZNAVIGATORBATTERY
   NS_DECL_NSIDOMMOZNAVIGATORSMS
+  NS_DECL_NSIDOMNAVIGATORUSERMEDIA
 #ifdef MOZ_B2G_RIL
   NS_DECL_NSIDOMNAVIGATORTELEPHONY
 #endif
   NS_DECL_NSIDOMMOZNAVIGATORNETWORK
 
 #ifdef MOZ_B2G_BT
   NS_DECL_NSIDOMNAVIGATORBLUETOOTH
 #endif
diff --git a/dom/base/nsUserMedia.cpp b/dom/base/nsUserMedia.cpp
new file mode 100644
--- /dev/null
+++ b/dom/base/nsUserMedia.cpp
@@ -0,0 +1,126 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "Navigator.h"
+#include "MediaStreamGraph.h"
+#include "MediaEngineDefault.h"
+
+namespace mozilla {
+namespace dom {
+
+class ErrorCallbackRunnable : public nsRunnable {
+public:
+  ErrorCallbackRunnable(
+    nsIDOMGetUserMediaErrorCallback *aError, const nsString& aErrorMsg) :
+    mError(aError), mErrorMsg(aErrorMsg) {}
+  NS_IMETHOD Run() {
+    mError->OnError(mErrorMsg);
+    return NS_OK;
+  }
+private:
+  nsCOMPtr<nsIDOMGetUserMediaErrorCallback> mError;
+  const nsString mErrorMsg;
+};
+
+class SuccessCallbackRunnable : public nsRunnable {
+public:
+  SuccessCallbackRunnable(
+    nsIDOMGetUserMediaSuccessCallback *aSuccess, nsIDOMMediaStream *aStream) :
+    mSuccess(aSuccess), mStream(aStream) {}
+  NS_IMETHOD Run() {
+    mSuccess->OnSuccess(mStream);
+    return NS_OK;
+  }
+private:
+  nsCOMPtr<nsIDOMGetUserMediaSuccessCallback> mSuccess;
+  nsCOMPtr<nsIDOMMediaStream> mStream;
+};
+
+class MediaManager {
+public:
+  static MediaEngine* GetBackend() {
+    if (!mBackend) {
+      mBackend = new MediaEngineDefault();
+    }
+    return mBackend;
+  }
+
+private:
+  MediaManager(){}
+  MediaManager(MediaManager const&){};
+  static MediaEngine* mBackend;
+};
+
+NS_IMETHODIMP
+Navigator::MozGetUserMedia(nsIMediaStreamOptions *aParams,
+  nsIDOMGetUserMediaSuccessCallback* onSuccess,
+  nsIDOMGetUserMediaErrorCallback* onError)
+{
+  NS_ENSURE_TRUE(aParams, NS_ERROR_NULL_POINTER);
+  
+  bool picture;
+  nsresult rv = aParams->GetPicture(&picture);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  if (picture) {
+    NS_DispatchToMainThread(new ErrorCallbackRunnable(
+      onError, NS_LITERAL_STRING("NOT_IMPLEMENTED")
+    ));
+    return NS_OK;
+  }
+
+  bool audio, video;
+  rv = aParams->GetAudio(&audio);
+  NS_ENSURE_SUCCESS(rv, rv);
+  rv = aParams->GetVideo(&video);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  MediaEngine* aBackend = MediaManager::GetBackend();
+
+  PRInt32 len;
+  nsDOMMediaStreamHelper *vHelper = nsnull;
+  nsDOMMediaStreamHelper *aHelper = nsnull;
+  MediaEngineVideoSource *vSource = nsnull;
+  MediaEngineAudioSource *aSource = nsnull;
+
+  if (video) {
+    // Pick the last device
+    MediaEngineVideoSource *sources = aBackend->EnumerateVideoDevices(len);
+    vSource = &sources[len-1];
+
+    // Normally we would now get the name & UUID for the device and ask the
+    // user permission. We will do that when we have a permission UI.
+    vHelper = vSource->Allocate();
+  }
+
+  if (audio) {
+    // Same for audio
+    MediaEngineAudioSource *sources = aBackend->EnumerateAudioDevices(len);
+    aSource = &sources[len-1];
+    aHelper = aSource->Allocate();
+  }
+
+  // If we were asked for both audio & video, combine into a single stream
+  if (vHelper && aHelper) {
+    delete vHelper;
+    delete aHelper;
+    NS_DispatchToMainThread(new SuccessCallbackRunnable(
+      onSuccess, new nsDOMMediaStreamHelper(vSource, aSource)
+    ));
+    return NS_OK;
+  }
+
+  if (vHelper) {
+    NS_DispatchToMainThread(new SuccessCallbackRunnable(onSuccess, vHelper));
+    return NS_OK;
+  }
+  if (aHelper) {
+    NS_DispatchToMainThread(new SuccessCallbackRunnable(onSuccess, aHelper));
+  }
+
+  return NS_OK;
+}
+
+}
+}
diff --git a/dom/interfaces/base/Makefile.in b/dom/interfaces/base/Makefile.in
--- a/dom/interfaces/base/Makefile.in
+++ b/dom/interfaces/base/Makefile.in
@@ -65,16 +65,17 @@ XPIDLSRCS =					\
 	nsIDOMCRMFObject.idl			\
 	nsIDOMCrypto.idl			\
 	nsIDOMHistory.idl			\
 	nsIDOMLocation.idl			\
 	nsIDOMMediaQueryList.idl		\
 	nsIDOMMimeType.idl			\
 	nsIDOMMimeTypeArray.idl			\
 	nsIDOMNavigator.idl			\
+	nsIDOMNavigatorUserMedia.idl \
 	nsIDOMPkcs11.idl			\
 	nsIDOMPlugin.idl			\
 	nsIDOMPluginArray.idl			\
 	nsIDOMScreen.idl			\
 	nsIDOMJSWindow.idl			\
 	nsIDOMModalContentWindow.idl		\
 	nsIDOMChromeWindow.idl			\
         nsIDOMClientRect.idl			\
diff --git a/dom/interfaces/base/nsIDOMNavigatorUserMedia.idl b/dom/interfaces/base/nsIDOMNavigatorUserMedia.idl
new file mode 100644
--- /dev/null
+++ b/dom/interfaces/base/nsIDOMNavigatorUserMedia.idl
@@ -0,0 +1,39 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this file,
+ * You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+#include "nsIDOMMediaStream.idl"
+
+[scriptable, function, uuid(f2a144fc-3534-4761-8c5d-989ae720f89a)]
+interface nsIDOMGetUserMediaSuccessCallback : nsISupports
+{
+  /* value should be a nsIDOMBlob is picture is true,
+   * and a nsIDOMMediaStream if either audio or video are true.
+   */
+  void onSuccess(in nsIDOMMediaStream value);
+};
+
+[scriptable, function, uuid(2614bbcf-85cc-43e5-8740-964f52bdc7ca)]
+interface nsIDOMGetUserMediaErrorCallback : nsISupports
+{
+  void onError(in DOMString error);
+};
+
+[scriptable, uuid(8a26205e-e8f7-4372-bd15-97ff982b4c1c)]
+interface nsIMediaStreamOptions : nsISupports
+{
+  readonly attribute boolean audio;
+  readonly attribute boolean video;
+  readonly attribute boolean picture;
+};
+
+[scriptable, uuid(381e0071-0be5-4f6b-ae21-8e3407a37faa)]
+interface nsIDOMNavigatorUserMedia : nsISupports
+{
+  void mozGetUserMedia(
+    in nsIMediaStreamOptions params,
+    in nsIDOMGetUserMediaSuccessCallback onsuccess,
+    in nsIDOMGetUserMediaErrorCallback onerror
+  );
+};
\ No newline at end of file
